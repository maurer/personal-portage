diff --git a/chopdis b/chopdis
index d023c13..8c209d1 100755
--- a/chopdis
+++ b/chopdis
@@ -10,7 +10,7 @@ REMOVE_LINE = -3
 startDict = {}
 endList = []
 
-visualizer = os.path.dirname(os.path.realpath(__file__))
+visualizer = '/var/lib/phoenix/visualizer'
 datadir = os.path.join(visualizer, "data")
 
 def encode(l):
diff --git a/phoenix2 b/phoenix2
index 5ad329b..0bae72d 100755
--- a/phoenix2
+++ b/phoenix2
@@ -23,7 +23,9 @@ def main():
         binary = args.binary
 
         basename = os.path.basename(binary)
-        visualizer = os.path.dirname(os.path.realpath(__file__))
+        phoenix_dir = '/var/lib/phoenix'
+        visualizer  = os.path.join(phoenix_dir, 'visualizer')
+        bindir      = os.path.join(phoenix_dir, 'bin')
 
         # prepare directories
         datadir = os.path.join(visualizer, DATAFOLDERNAME)
@@ -33,7 +35,7 @@ def main():
 
         # run decompiler
         try:
-                subprocess.check_call(['./bap-types/utils/demo',  '-dir', basedir, binary], stderr=subprocess.STDOUT)
+                subprocess.check_call([os.path.join(bindir, 'decomp-backend'),  '-dir', basedir, binary], stderr=subprocess.STDOUT)
         except subprocess.CalledProcessError as e:
                 print(e.output)
                 print('Decompiler error.')
@@ -46,44 +48,12 @@ def main():
                 s = subprocess.check_output(['objdump', '-d', binary], stderr=subprocess.STDOUT)
                 output.write(s)
                 output.close()
-                subprocess.check_call([os.path.join(visualizer, 'chopdis'), basename], stderr=subprocess.STDOUT)
+                subprocess.check_call([os.path.join(bindir, 'chopdis'), basename], stderr=subprocess.STDOUT)
+                ip_addr = subprocess.call("ifconfig eth0 | grep inet | grep -v inet6 | awk '{print $2}'", shell=True)
+                print("http://" + ip_addr + "/decompiler.html?" + basename)
         except subprocess.CalledProcessError as e:
                 print(e.output)
                 print('Disassembler error.')
                 return
-
-
-        # start http server
-        try:
-                os.chdir(visualizer)
-                os.system('python2 -m SimpleHTTPServer 1>/dev/null 2>/dev/null &')
-                print('HTTP server started in port 8000.')
-        except:
-                print('HTTP server is already running...')
-
-        # open url with your favorite browser
-        url = 'http://0.0.0.0:8000/decompiler.html?bin=%s' % basename
-        cmdlines = [
-                # Linux
-                "xdg-open '%s'",
-                "chromium-browser '%s'",
-                "google-chrome '%s'",
-                # OSX
-                "open '%s'",
-        ]
-        success = False
-        devnull = open(os.devnull, 'w')
-        while not success and len(cmdlines):
-                cmdline = cmdlines.pop(0) % url
-                print('Trying [%s]... ' % cmdline, end='', file=sys.stderr)
-                try:
-                        subprocess.Popen(shlex.split(cmdline), stdout=devnull, stderr=devnull)
-                        print('Yes.', file=sys.stderr)
-                        success = True
-                except OSError as e:
-                        print('No.', file=sys.stderr)
-        if not success:
-                print('%s' % url)
-
 if __name__ == "__main__":
         main()
